version: '3'

################################################
# DEFINE SERVICES
#
# Environment Variables:
# - DIR_DEEMIX (default: ./deemix)
# - DIR_DELUGE (default: ./deluge-vpn)
# - DIR_DOWNLOADS
# - DIR_LIDARR (default: ./lidarr)
# - DIR_MEDIA
# - DIR_NGINX
# - DIR_PROWLARR (default: ./prowlarr)
# - DIR_RADARR_FHD (default: ./radarr-fhd)
# - DIR_RADARR_UHD (default: ./radarr-uhd)
# - DIR_SONARR_ANIME (default: ./sonarr-anime)
# - DIR_SONARR_TV (default: ./sonarr-tv)
# - LAN_NETWORK (default: 192.168.1.0/24)
# - NAME_SERVERS (default: 192.168.1.1)
# - PUID (default: 1000)
# - PGID (default: 1000)
# - UMASK (default: 000)
# - VPN_CLIENT (default: wireguard)
# - VPN_INPUT_PORTS (default: no value)
# - VPN_OUTPUT_PORTS (default: no value)
# - VPN_PASS (default: no value)
# - VPN_PROV (default: custom)
# - VPN_USER (default: no value)
################################################
services:

  # *** Deluge VPN (custom image) ***
  # Deluge is a full-featured â€‹BitTorrent client for Linux, OS X, Unix and
  # Windows.

  # This Docker includes OpenVPN and WireGuard to ensure a secure and private
  # connection to the Internet, including use of iptables to prevent IP leakage
  # when the tunnel is down. It also includes Privoxy to allow unfiltered access
  # to index sites, to use Privoxy please point your application at 
  # http://<host ip>:8118.

  deluge-vpn:
    image: binhex/arch-delugevpn:latest
    container_name: bittorrent-client
    volumes:
      - ${DIR_DELUGE:-./deluge-vpn}:/config
      - ${DIR_DOWNLOADS}:/data
      - /etc/localtime:/etc/localtime:ro
    networks:
      internal_net:
        ipv4_address: 10.81.12.2
    environment:
      DEBUG: false # Options: true|false
      DELUGE_DAEMON_LOG_LEVEL: error # Options: info|warning|error|none|debug|trace|garbage
      DELUGE_WEB_LOG_LEVEL: error # Options: info|warning|error|none|debug|trace|garbage
      ENABLE_PRIVOXY: yes # Options: yes|no
      LAN_NETWORK: ${LAN_NETWORK:-192.168.1.0/24}
      NAME_SERVERS: ${NAME_SERVERS:-192.168.1.1}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      STRICT_PORT_FORWARD: yes # Options: yes|no
      UMASK: ${UMASK:-000}
      VPN_ENABLED: yes # Options: yes|no
      VPN_USER: ${VPN_USER:-}
      VPN_PASS: ${VPN_PASS:-}
      VPN_PROV: ${VPN_PROV:-custom} # Options: pia|airvpn|custom
      VPN_CLIENT: ${VPN_CLIENT:-wireguard} # Options: openvpn|wireguard
      VPN_INPUT_PORTS: ${VPN_INPUT_PORTS:-}
      VPN_OUTPUT_PORTS: ${VPN_OUTPUT_PORTS:-}
    privileged: true
    sysctls:
      net.ipv4.conf.all.src_valid_mark: 1
    restart: unless-stopped

  # *** Deemix ***
  # deemix (lowercase) is a barebone deezer downloader library built from the ashes of Deezloader Remix

  deemix:
    image: registry.gitlab.com/bockiii/deemix-docker
    container_name: bittorrent-deemix
    volumes:
			- ${DIR_DEEMIX:-./deemix}:/config
			- ${DIR_DOWNLOADS}/deemix:/downloads
    networks:
      internal_net:
        ipv4_address: 10.81.12.10
    environment:
      DEEMIX_SINGLE_USER: true
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
      UMASK: ${UMASK:-022}

  # *** Lidarr ***
  # Lidarr is a music collection manager for Usenet and BitTorrent users.
  # It can monitor multiple RSS feeds for new tracks from your favorite
  # artists and will grab, sort and rename them. It can also be configured
  # to automatically upgrade the quality of files already downloaded when
  # a better quality format becomes available.

  lidarr:
    image: binhex/arch-lidarr:latest
    container_name: bittorrent-lidarr
    volumes:
      - ${DIR_DOWNLOADS}:/data
      - ${DIR_MEDIA}:/media
      - ${DIR_LIDARR:-./lidarr}:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      internal_net:
        ipv4_address: 10.81.12.3
    environment:
      UMASK: ${UMASK:-000}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    restart: unless-stopped
    depends_on:
      - deluge-vpn
      - deemix

  # *** Radarr ***
  # This fork of Sonarr aims to turn it into something like Couchpotato.

  radarr_fhd:
    image: binhex/arch-radarr:latest
    container_name: bittorrent-radarr-fhd
    volumes:
      - ${DIR_DOWNLOADS}:/data
      - ${DIR_MEDIA}:/media
      - ${DIR_RADARR_FHD:-./radarr-fhd}:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      internal_net:
        ipv4_address: 10.81.12.4
    environment:
      UMASK: ${UMASK:-000}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    restart: unless-stopped
    depends_on:
      - deluge-vpn

  radarr_uhd:
    image: binhex/arch-radarr:latest
    container_name: bittorrent-radarr-uhd
    volumes:
      - ${DIR_DOWNLOADS}:/data
      - ${DIR_MEDIA}:/media
      - ${DIR_RADARR_UHD:-./radarr-uhd}:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      internal_net:
        ipv4_address: 10.81.12.5
    environment:
      UMASK: ${UMASK:-000}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    restart: unless-stopped
    depends_on:
      - deluge-vpn

  # *** Sonarr ***
  # Sonarr is a PVR for Usenet and BitTorrent users. It can monitor multiple RSS
  # feeds for new episodes of your favorite shows and will grab, sort and rename
  # them. It can also be configured to automatically upgrade the quality of files
  # already downloaded when a better quality format becomes available.

  sonarr_anime:
    image: binhex/arch-sonarr:latest
    container_name: bittorrent-sonarr-anime
    volumes:
      - ${DIR_DOWNLOADS}:/data
      - ${DIR_MEDIA}:/media
      - ${DIR_SONARR_ANIME:-./sonarr-anime}:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      internal_net:
        ipv4_address: 10.81.12.6
    environment:
      UMASK: ${UMASK:-000}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    restart: unless-stopped
    depends_on:
      - deluge-vpn

  sonarr_tv:
    image: binhex/arch-sonarr:latest
    container_name: bittorrent-sonarr-tv
    volumes:
      - ${DIR_DOWNLOADS}:/data
      - ${DIR_MEDIA}:/media
      - ${DIR_SONARR_TV:-./sonarr-tv}:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      internal_net:
        ipv4_address: 10.81.12.7
    environment:
      UMASK: ${UMASK:-000}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    restart: unless-stopped
    depends_on:
      - deluge-vpn

  # *** Prowlarr ***
  # Prowlarr is a indexer manager/proxy built on the popular arr .net/reactjs
  # base stack to integrate with your various PVR apps. Prowlarr supports both
  # Torrent Trackers and Usenet Indexers. It integrates seamlessly with Sonarr,
  # Radarr, Lidarr, and Readarr offering complete management of your indexers
  # with no per app Indexer setup required (we do it all).

  prowlarr:
    image: binhex/arch-prowlarr:latest
    container_name: bittorrent-prowlarr
    volumes:
      - ${DIR_PROWLARR:-./prowlarr}:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      internal_net:
        ipv4_address: 10.81.12.8
    environment:
      UMASK: ${UMASK:-000}
      PUID: ${PUID:-1000}
      PGID: ${PGID:-1000}
    restart: unless-stopped
    depends_on:
      - lidarr
      - sonarr_anime
      - sonarr_tv
      - radarr_fhd
      - radarr_uhd
  
  # *** Nginx ***
  # Nginx is a simple webserver with php support.

  nginx:
    image: nginx:mainline-alpine
    container_name: bittorrent-nginx
    volumes:
      - ${DIR_NGINX}/nginx.conf:/etc/nginx/nginx.conf:ro
      - ${DIR_NGINX}/logs:/etc/nginx/logs
    networks:
      internal_net:
        ipv4_address: 10.81.12.9
      external_net:
        ipv4_address: ${WEBUI_IPADDR}
    restart: unless-stopped
    depends_on:
      - prowlarr

################################################
# DEFINE NETWORKS
################################################
networks:

  # *** Internal network ***

  internal_net:
    name: bittorrent_internal_net
    driver: bridge
    ipam:
      config:
        - subnet: 10.81.12.0/24
          gateway: 10.81.12.1

  # *** External network ***

  external_net:
    name: ${WEBUI_MACVLAN}
    external: true

########################################################################
# Extra variables:
# - network_storage_ip (string)
# 
# Host inventory variables:
# - None
########################################################################
- name: Mount Network Share
  hosts: dns_server
  vars:
    nfs_dst: /mnt/containers
    nfs_shares:
      - src: /containers/dnscrypt
        dst: /mnt/containers/dnscrypt
        opts: rw,nointr
      - src: /containers/pihole_doh
        dst: /mnt/containers/pihole_doh
        opts: rw,nointr
      - src: /containers/pihole_recursive
        dst: /mnt/containers/pihole_recursive
        opts: rw,nointr
      - src: /containers/unbound
        dst: /mnt/containers/unbound
        opts: rw,nointr
      - src: /containers/wireguard
        dst: /mnt/containers/wireguard
        opts: rw,nointr
  tasks:
    - name: Install NFS support
      become: yes # Admin privileges required
      ansible.builtin.apt:
        name: nfs-common
        state: present

    - name: Create "{{ nfs_dst }}" directory
      ansible.builtin.file:
        path: "{{ nfs_dst }}"
        state: directory

    - name: Unmount NFS share folders
      become: yes # Admin privileges required
      ansible.posix.mount:
        path: "{{ item.dst }}"
        state: absent
      with_items: "{{ nfs_shares }}"

    - name: Remove NFS share folder remnants
      ansible.builtin.file:
        path: "{{ item.dst }}"
        state: absent
      with_items: "{{ nfs_shares }}"

    - name: Mount NFS share folders
      become: yes # Admin privileges required
      ansible.posix.mount:
        src: "{{ network_storage_ip }}:{{ item.src }}"
        path: "{{ item.dst }}"
        fstype: nfs
        opts: "{{ item.opts }}"
        state: mounted
      with_items: "{{ nfs_shares }}"

########################################################################
# Extra variables:
# NONE
# 
# Host inventory variables:
# NONE
########################################################################
- name: Initialize Kubernetes cluster
  hosts: k8s_cluster
  tasks:
    - name: Add dedicated sudoer file for "{{ ansible_user }}"
      become: yes
      ansible.builtin.copy:
        dest: '/etc/sudoers.d/{{ ansible_user }}'
        content: |
          {{ ansible_user }} ALL=(ALL) NOPASSWD: ALL

    # Additional tasks for Raspberry Pi nodes
    - name: Check if the node is a Raspberry Pi
      ansible.builtin.shell: >-
        cat /proc/cpuinfo | grep Model | cut -d ' ' -f 2 | grep Raspberry
      register: rpi_node
      changed_when: false
      failed_when: false

    - when: rpi_node.rc == 0
      block:
        - name: Check if "cgroup_enable=cpuset" flag is added in cmdline.txt
          ansible.builtin.shell: >-
            cat /boot/cmdline.txt | grep cgroup_enable=cpuset
          register: rpi_cgroup_enable_cpuset
          changed_when: false
          failed_when: false

        - name: Check if "cgroup_memory=1" flag is added in cmdline.txt
          ansible.builtin.shell: >-
            cat /boot/cmdline.txt | grep cgroup_memory=1
          register: rpi_cgroup_memory
          changed_when: false
          failed_when: false

        - name: Check if "cgroup_enable=memory" flag is added in cmdline.txt
          ansible.builtin.shell: >-
            cat /boot/cmdline.txt | grep cgroup_enable=memory
          register: rpi_cgroup_enable_memory
          changed_when: false
          failed_when: false

        - name: Add "cgroup_enable=cpuset" flag to cmdline.txt
          when: rpi_cgroup_enable_cpuset.rc == 1
          become: yes
          ansible.builtin.shell: >-
            sed "1s/$/ cgroup_enable=cpuset/" -i /boot/cmdline.txt
          register: rpi_cgroup_enable_cpuset_added
          changed_when: true
          args:
            warn: false

        - name: Add "cgroup_memory=1" flag to cmdline.txt
          when: rpi_cgroup_memory.rc == 1
          become: yes
          ansible.builtin.shell: >-
            sed "1s/$/ cgroup_memory=1/" -i /boot/cmdline.txt
          register: rpi_cgroup_memory_1_added
          changed_when: true
          args:
            warn: false

        - name: Add "cgroup_enable=memory" flag to cmdline.txt
          when: rpi_cgroup_enable_memory.rc == 1
          become: yes
          ansible.builtin.shell: >-
            sed "1s/$/ cgroup_enable=memory/" -i /boot/cmdline.txt
          register: rpi_cgroup_enable_memory_added
          changed_when: true
          args:
            warn: false

        - name: Restart when cmdline.txt is changed
          when: rpi_cgroup_enable_cpuset_added.changed or rpi_cgroup_memory_1_added.changed or rpi_cgroup_enable_memory_added.changed
          become: yes
          ansible.builtin.reboot:
            msg: "Reboot initiated by Ansible due to changes in cmdline.txt"
            connect_timeout: 5
            reboot_timeout: 300
            pre_reboot_delay: 0
            post_reboot_delay: 30
            test_command: uptime

    # Update system
    - name: Update package repository
      become: yes
      ansible.builtin.apt:
        update_cache: yes
        update_cache_retries: 3
        cache_valid_time: 3600 # 1 hour

    - name: Upgrade all installed packages
      become: yes
      register: apt_package_upgrade
      ansible.builtin.apt:
        upgrade: safe

    # Install common tools
    - name: Install common utilities
      become: yes
      register: apt_package_install
      ansible.builtin.apt:
        state: present
        pkg:
          - curl
          - git
          - htop
          - jq
          - net-tools
          - wget
          - zsh

    - name: Cleanup unused or unneeded packages
      become: yes
      ansible.builtin.apt:
        autoclean: true
        autoremove: true

    # Reboot system
    - name: Reboot if packages are installed or updated
      become: yes
      when: apt_package_upgrade.changed or apt_package_install.changed
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible due to apt packages"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
